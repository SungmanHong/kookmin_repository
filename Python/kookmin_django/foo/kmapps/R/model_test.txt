rm(list = ls())

localH2O <- h2o.init() ## using a max 1GB of RAM
h2o.removeAll()

rf <- h2o.loadModel("C:/Users/mijin/Desktop/general_46_rf")

# setwd("C:/kookmin_repository/R_h2o 1102/R_h2o/plus")
tmp <- read.csv('./data/general_46_plus.csv', header = TRUE)
#head(tmp)
tmp = tmp[, - c(1:4, 8)]
# 파생변수제외 선택(33~: 파생변수)
tmp <- tmp[, c(1:32)]
tmp = as.h2o(tmp)
#dim(tmp)

thred_plus = h2o.find_threshold_by_max_metric(h2o.performance(rf, newdata = tmp), "f1")
#rf_hit_plus = h2o.tpr(h2o.performance(rf, newdata = tmp), thresholds = thred_plus)
#rf_AUC_plus = h2o.auc(h2o.performance(rf, newdata = tmp))
#new = h2o.confusionMatrix(h2o.performance(rf, newdata = tmp), thresholds = thred_plus)
rf_cm_plus = h2o.confusionMatrix(h2o.performance(rf, newdata = tmp), thresholds = thred_plus)
rf_Accuracy_plus = h2o.accuracy(h2o.performance(rf, newdata = tmp), thresholds = thred_plus)
rf_recall_plus = h2o.recall(h2o.performance(rf, newdata = tmp), thresholds = thred_plus)
rf_precision_plus = h2o.precision(h2o.performance(rf, newdata = tmp), thresholds = thred_plus)
rf_AUC_plus = h2o.auc(h2o.performance(rf, newdata = tmp))


#print("general_46_plus\n")
#rf_cm_plus
#print(paste("plus_ACCURACY   : ", rf_Accuracy_plus, sep = ""))
#print(paste("plus_AUC        : ", rf_AUC_plus, sep = ""))
#print(paste("plus_recall     : ", rf_recall_plus, sep = ""))
#print(paste("plus_precision  : ", rf_precision_plus, sep = ""))
rf_AUC_plus
#■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■


